/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id "java"
    id "maven-publish"
    id "org.jetbrains.kotlin.jvm" version "1.5.21"
    id "com.github.johnrengelman.shadow" version "7.0.0"
    id "io.github.slimjar" version "1.3.0"
}

archivesBaseName = "Guilds"
group = "me.glaremasters"
version = "3.5.6.1"
sourceCompatibility = JavaVersion.VERSION_1_8

ext {
    base = "me.glaremasters.guilds.libs."
}

repositories {
    mavenCentral()
    maven {
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
        content {
            includeGroup("org.bukkit")
        }
    }

    maven {
        url = "https://oss.sonatype.org/content/groups/public/"
    }

    maven {
        url = "https://repo.aikar.co/content/groups/aikar/"
        content {
            includeGroup("co.aikar")
        }
    }

    maven {
        url = "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }

    maven {
        url = "https://repo.mattstudios.me/artifactory/public/"
    }

    maven {
        url = "https://repo.vshnv.tech/"
    }

    maven {
        url = "https://repo.codemc.org/repository/maven-public/"
        content {
            includeGroup("org.codemc.worldguardwrapper")
        }
    }

    maven {
        url = "https://repo.glaremasters.me/repository/public/"
    }

}

shadowJar {
    minimize()
    archiveFileName = "Guilds-${project.version}.jar"
    relocate("io.github.slimjar", "${base}slimjar")
}

slimJar {
    relocate("org.bstats", "${base}bstats")
    relocate("co.aikar.commands", "${base}acf")
    relocate("co.aikar.locales", "${base}locales")
    relocate("co.aikar.taskchain", "${base}taskchain")
    relocate("ch.jalu.configme", "${base}configme")
    relocate("com.zaxxer.hikari", "${base}hikari")
    relocate("org.jdbi", "${base}jdbi")
    relocate("org.mariadb.jdbc", "${base}mariadb")
    relocate("dev.triumphteam.gui", "${base}triumphgui")
    relocate("net.kyori", "${base}kyori")
}


dependencies {

    // Slimjar
    implementation slimjar("1.2.5")

    // Command Handling
    implementation("co.aikar:acf-paper:0.5.0-SNAPSHOT")

    // Bstats Data Collecting
    implementation("org.bstats:bstats-bukkit:2.2.1")

    // Taskchain Scheduling
    implementation("co.aikar:taskchain-bukkit:3.7.2")

    // Worldguard Claim Handling
    implementation("org.codemc.worldguardwrapper:worldguardwrapper:1.1.9-SNAPSHOT")

    // Configuration Lib
    implementation("ch.jalu:configme:1.2.0")

    // Serializing Inventories via JSON
    implementation("com.dumptruckman.minecraft:JsonConfiguration:1.1")

    // Cross-Version Support
    implementation("com.github.cryptomorin:XSeries:8.3.0")

    // Adventure
    implementation("net.kyori:adventure-platform-bukkit:4.0.0-SNAPSHOT")

    // GUI Lib
    implementation("dev.triumphteam:triumph-gui:3.0.3")

    // Vault Support
    compileOnly("net.milkbowl:vault:1.7")

    // Database Stuff
    implementation("com.zaxxer:HikariCP:4.0.3")
    implementation("org.jdbi:jdbi3-core:3.8.2")
    implementation("org.jdbi:jdbi3-sqlobject:3.8.2")
    implementation("org.mariadb.jdbc:mariadb-java-client:2.7.2")



    // Logger
    implementation("org.slf4j:slf4j-api:1.7.25")

    // Kotlin collections
    slim("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    // Bukkit Version
    compileOnly("org.spigotmc:spigot-api:1.17.1-R0.1-SNAPSHOT")

    // Mojang Library
    compileOnly("com.mojang:authlib:1.5.25")

    // PlaceholderAPI
    compileOnly("me.clip:placeholderapi:2.10.10")

}

sourceSets {
    test.compileClasspath += configurations.compileOnly
    test.runtimeClasspath += configurations.compileOnly
}

compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
    kotlinOptions.javaParameters = true
}
compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}

//publishing {
//    repositories {
//        maven {
//            name 'glare'
//            url "https://repo.glaremasters.me/repository/guilds/"
//            credentials {
//                username guildUser
//                password guildPass
//            }
//        }
//    }
//    publications {
//        maven(MavenPublication) {
//            from(components.java)
//        }
//    }
//}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    filter ReplaceTokens, tokens: [version: version]
}
